[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/reyon/Firmware_programming/esp32_projects/hello_world/build/bootloader/esp-idf/esptool_py && /Users/reyon/.espressif/python_env/idf5.1_py3.12_env/bin/python /Users/reyon/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/reyon/Firmware_programming/esp32_projects/hello_world/build/bootloader/bootloader.bin
Bootloader binary size 0x51c0 bytes. 0x2e40 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello_world_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable hello_world.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/reyon/Firmware_programming/esp32_projects/hello_world/build/hello_world.bin
[9/10] cd /Users/reyon/Firmware_programming/esp32_projects/hello_world/build/esp-idf/esptool_py && /Users/reyon/.espressif/python_env/idf5.1_py3.12_env/bin/python /Users/reyon/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/reyon/Firmware_programming/esp32_projects/hello_world/build/partition_table/partition-table.bin /Users/reyon/Firmware_programming/esp32_projects/hello_world/build/hello_world.bin
hello_world.bin binary size 0x31660 bytes. Smallest app partition is 0x100000 bytes. 0xce9a0 bytes (81%) free.
[9/10] cd /Users/reyon/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/reyon/esp/esp-idf -D "SERIAL_TOOL=/Users/reyon/.espressif/python_env/idf5.1_py3.12_env/bin/python;;/Users/reyon/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/reyon/Firmware_programming/esp32_projects/hello_world/build -P /Users/reyon/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/tty.usbmodem14401 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 hello_world.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port /dev/tty.usbmodem14401
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: 24:ec:4a:3a:2b:a8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00041fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 20928 bytes to 13291...
Writing at 0x00000000... (100 %)
Wrote 20928 bytes (13291 compressed) at 0x00000000 in 0.5 seconds (effective 335.0 kbit/s)...
Hash of data verified.
Compressed 202336 bytes to 109866...
Writing at 0x00010000... (14 %)
Writing at 0x0001cd5d... (28 %)
Writing at 0x000227f4... (42 %)
Writing at 0x00028dcc... (57 %)
Writing at 0x0002f468... (71 %)
Writing at 0x0003728a... (85 %)
Writing at 0x0003cdc7... (100 %)
Wrote 202336 bytes (109866 compressed) at 0x00010000 in 2.2 seconds (effective 736.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 384.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
